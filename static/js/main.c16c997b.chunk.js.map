{"version":3,"sources":["components/About.js","components/Login.js","components/Demo.js","components/Navbar.js","App.js","index.js"],"names":["About","Fragment","className","target","rel","href","alt","src","Component","Login","props","onChange","e","setState","name","value","username","state","device","Form","onSubmit","this","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","selected","disabled","hidden","Demo","resetTest","isActive","isComplete","generated","results","currentSequenceIndex","currentRepetition","currentCircleIndex","generateCircleData","getResults","generateCsvFromResultLogs","csv","Object","keys","join","map","l","values","csvData","Blob","FileSaver","saveAs","Date","now","toString","resumeTest","restartTimer","pauseTest","completeTest","startTime","performance","timeElapsed","stopTimer","onLoginDetailsChange","loginData","onClick","d","i","hit","s","sequences","appendResultLog","distance","radius","direction","Math","round","count","repetitions","length","renderCircles","sequence","rep","time","existingLog","modifiedResults","timestamp","misses","prevState","inSequence","rev","PI","center","container","clientWidth","clientHeight","circles","Array","fill","_","rotationOffset","x","cos","y","sin","color","activeColor","d3","remove","attr","on","stopPropagation","selectAll","data","enter","append","Sequences","Modal","centered","keyboard","show","onHide","backdrop","Header","Title","Body","Footer","Button","variant","id","ref","style","width","height","position","zIndex","right","left","top","bottom","margin","maxWidth","maxHeight","overflow","Navbar","to","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c16c997b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container py-5\">\r\n                    <h1>Fitt's Law Demo</h1>\r\n                    <hr/>\r\n                    <p className=\"text-justify\">\r\n                        This application was created to test Fitt's law, by collecting data of user input in two dimensions. \r\n                        It does so by prompting the user to click or tap several sequences of circles as highlighted and logging the accuracy and time taken to select each circle. \r\n                        This data is then made available to the user at the end of the test via a CSV file.\r\n                        For more information, feel free to contact me via my social accounts.\r\n                    </p>\r\n                    <hr/>\r\n                    <p>Built with React, D3, and FileShare by Vishnu Gunapathi.</p>\r\n                    <hr/>\r\n                    <div className=\"icon-container\">\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/twinji\">\r\n                            <img alt=\"GitHub\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/github.svg\"/>\r\n                        </a>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/_twinji/\">\r\n                            <img alt=\"Instagram\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/instagram.svg\"/>\r\n                        </a>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/twinji/\">\r\n                            <img alt=\"LinkedIn\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/linkedin.svg\"/>\r\n                        </a>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/_twinji\">\r\n                            <img alt=\"Twitter\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/twitter.svg\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport PropTypes from 'prop-types';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport class Login extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            device: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ \r\n            [e.target.name]: e.target.value \r\n        }, () => {\r\n            this.props.onChange({\r\n                username: this.state.username,\r\n                device: this.state.device\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"loginForm.ControlInputUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            defaultValue=\"\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter your username\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"6\" controlId=\"loginForm.ControlInputDevice\">\r\n                        <Form.Label>Device</Form.Label>\r\n                        <Form.Control \r\n                            as=\"select\"\r\n                            defaultValue=\"\" \r\n                            required \r\n                            onChange={this.onChange}\r\n                            name=\"device\"\r\n                        >\r\n                            <option value=\"\" selected disabled hidden>Select a device</option>\r\n                            <option value=\"mouse\">Mouse</option>\r\n                            <option value=\"trackpad\">Trackpad</option>\r\n                            <option value=\"touchscreen\">Touchscreen</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please select your input device\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Login from './Login';\r\nimport FileSaver from 'file-saver';\r\nimport Sequences from '../data/sequences.json';\r\n\r\nexport class Demo extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            isActive: false,\r\n            isComplete : false,\r\n            username: '',\r\n            device: '',\r\n            sequences: Sequences,\r\n            generated: [],\r\n            results: [],\r\n            currentSequenceIndex: 0,\r\n            currentRepetition: 1,\r\n            currentCircleIndex: 0\r\n        }\r\n    }\r\n\r\n    resetTest = () => {\r\n        this.setState({\r\n            username: '',\r\n            device: '',\r\n            isActive: false,\r\n            isComplete: false,\r\n            generated: [],\r\n            results: [],\r\n            currentSequenceIndex: 0,\r\n            currentRepetition: 1,\r\n            currentCircleIndex: 0\r\n        }, () => {\r\n            this.generateCircleData();\r\n        });\r\n    }\r\n\r\n    getResults = () => {\r\n        this.generateCsvFromResultLogs();\r\n    }\r\n    \r\n    generateCsvFromResultLogs = () => {\r\n        const csv = Object.keys(this.state.results[0]).join(',') + '\\n'\r\n            + this.state.results.map(l => Object.values(l).join(',')).join('\\n');\r\n\r\n        const csvData = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n        FileSaver.saveAs(csvData, 'fitts_law_results_' + Date.now().toString() + '.csv');\r\n    }\r\n    \r\n    resumeTest = () => {\r\n        this.setState({\r\n            isActive: true\r\n        });\r\n        this.restartTimer();\r\n    }\r\n\r\n    pauseTest = () => {\r\n        this.setState({\r\n            isActive: false\r\n        });\r\n    }\r\n\r\n    completeTest = () => {\r\n        this.setState({\r\n            isActive: false,\r\n            isComplete: true\r\n        });\r\n    }\r\n\r\n    restartTimer = () => {\r\n        this.startTime = performance.now();\r\n        this.timeElapsed = null;\r\n    }\r\n\r\n    stopTimer = () => {\r\n        this.timeElapsed = performance.now() - this.startTime;\r\n    }\r\n\r\n    onLoginDetailsChange = (loginData) => {\r\n        this.setState({\r\n            username: loginData.username,\r\n            device: loginData.device\r\n        })\r\n    }\r\n\r\n    onClick = (d, i) => {\r\n\r\n        if (!this.state.isActive)\r\n            return;\r\n\r\n        let hit = i === this.state.currentCircleIndex;\r\n\r\n        if (hit) {\r\n            this.stopTimer();\r\n        }\r\n\r\n        const s = this.state.sequences[this.state.currentSequenceIndex];\r\n\r\n        this.appendResultLog(\r\n            this.state.username,\r\n            this.state.device,\r\n            this.state.currentSequenceIndex + 1,\r\n            this.state.currentRepetition,\r\n            s.distance,\r\n            s.radius,\r\n            s.direction,\r\n            hit,\r\n            this.timeElapsed\r\n        );\r\n\r\n        if (hit) {\r\n            let currentSequenceIndex = this.state.currentSequenceIndex;\r\n            let s = this.state.sequences[currentSequenceIndex];\r\n            let currentCircleIndex = (this.state.currentCircleIndex + Math.round(s.count / 2)) % s.count;\r\n            let currentRepetition = this.state.currentRepetition + 1;\r\n            let isComplete = false;\r\n\r\n            if (currentRepetition > s.repetitions) {\r\n                currentRepetition = 1;\r\n                currentCircleIndex = 0;\r\n                currentSequenceIndex++;\r\n\r\n                if (currentSequenceIndex >= this.state.sequences.length) {\r\n                    this.completeTest();\r\n                    isComplete = true;\r\n                } else {\r\n                    this.pauseTest();\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                currentCircleIndex,\r\n                currentRepetition,\r\n                currentSequenceIndex\r\n            }, () => {\r\n                if (!isComplete) {\r\n                    this.renderCircles();\r\n                    this.restartTimer();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    appendResultLog = (username, device, sequence, rep, distance, radius, direction, hit, time) => {\r\n\r\n        let existingLog = false;\r\n        var modifiedResults = this.state.results.map(l => {\r\n            if (l.username === username && l.device === device && l.sequence === sequence && l.rep === rep) {\r\n                existingLog = true;\r\n                l.timestamp = Date.now();\r\n                if (!hit) {\r\n                    l.misses++;\r\n                } else {\r\n                    l.hit = hit;\r\n                    l.time = this.timeElapsed;\r\n                }\r\n            }\r\n            return l;\r\n        });\r\n\r\n        if (existingLog) {\r\n            this.setState({\r\n                results: modifiedResults\r\n            });\r\n        } else {\r\n            this.setState(prevState => ({\r\n                results: [...prevState.results, {\r\n                    username, \r\n                    device, \r\n                    sequence, \r\n                    rep, \r\n                    distance, \r\n                    radius, \r\n                    direction, \r\n                    hit, \r\n                    time, \r\n                    misses: hit ? 0 : 1, \r\n                    timestamp: Date.now()\r\n                }]\r\n            }));\r\n        }\r\n    }\r\n\r\n    inSequence = () => {\r\n        return this.state.currentSequenceIndex > 0 && !this.state.isComplete;\r\n    }\r\n    \r\n    generateCircleData = () => {\r\n\r\n        this.setState({\r\n            generated: this.state.sequences.map((s) => {\r\n                \r\n                let rev = Math.PI * 2;\r\n                let center = {\r\n                    x: this.container.clientWidth / 2,\r\n                    y: this.container.clientHeight / 2\r\n                }\r\n\r\n                return {\r\n                    circles: Array(s.count).fill().map((_, i) => {\r\n                        let rotationOffset = Math.PI * 1.5;\r\n                        return {\r\n                            x: center.x + Math.cos(rotationOffset + i * (rev / s.count)) * s.distance / 2,\r\n                            y: center.y + Math.sin(rotationOffset + i * (rev / s.count)) * s.distance / 2,\r\n                            radius: s.radius,\r\n                            color: 'lightgray',\r\n                            activeColor: 'crimson'\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }, this.renderCircles);\r\n    }\r\n\r\n    renderCircles = () => {\r\n\r\n        d3.selectAll(\"svg > *\").remove();\r\n        \r\n        let svgContainer = d3\r\n            .select(\"#demoContainer > svg\")\r\n            .attr(\"width\", this.container.clientWidth)\r\n            .attr(\"height\", this.container.clientHeight)\r\n            .on(\"click\", e => {\r\n                d3.event.stopPropagation();\r\n                this.onClick(null, -1);\r\n            });\r\n\r\n        let circles = svgContainer\r\n            .selectAll(\"circle\")\r\n            .data(this.state.generated[this.state.currentSequenceIndex].circles)\r\n            .enter()\r\n            .append(\"circle\");\r\n\r\n        circles\r\n            .attr(\"cx\", d => d.x)\r\n            .attr(\"cy\", d => d.y)\r\n            .attr(\"r\", d => d.radius)\r\n            .attr(\"fill\", (d, i) => i === this.state.currentCircleIndex ? d.activeColor : d.color)\r\n            .on(\"click\", (d, i) => {\r\n                d3.event.stopPropagation();\r\n                this.onClick(d, i);\r\n            });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.resetTest();\r\n    }\r\n\r\n    render() {\r\n\r\n        const containerStyle = {\r\n            width: 'auto',\r\n            height: 'auto',\r\n            position: 'absolute',\r\n            zIndex: -100,\r\n            right: 0, left: 0, top: 0, bottom: 0,\r\n            margin: 'auto',\r\n            maxWidth: '100%',\r\n            maxHeight: '100%',\r\n            overflow: 'visible'\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal centered keyboard={false} show={!this.state.isActive} onHide={this.resumeTest} backdrop=\"static\">\r\n                    <Modal.Header>\r\n                        {\r\n                            (this.inSequence() || this.state.isComplete) &&\r\n                            <Modal.Title>\r\n                                Sequence {this.state.currentSequenceIndex} out of {this.state.sequences.length} complete\r\n                            </Modal.Title>\r\n                        }\r\n                        {              \r\n                            !this.inSequence() && !this.state.isComplete &&\r\n                            <Modal.Title>\r\n                                Fitt's law demo\r\n                            </Modal.Title>\r\n                        }\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {\r\n                            !this.inSequence() && !this.state.isComplete && <Login onChange={this.onLoginDetailsChange}/>\r\n                        }\r\n                        { \r\n                            this.inSequence() ? \r\n                                'Take a break and proceed to the next sequence when you are ready.' : \r\n                                    (this.state.isComplete ? 'You have completed this demo, click below to view results.' : 'Select the red circles as they appear to the best of your ability.') \r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        {\r\n                            !this.state.isComplete &&\r\n                            <Button variant=\"primary\" onClick={this.resumeTest} disabled={!this.state.username || !this.state.device}>\r\n                                { this.inSequence() ? 'Proceed' : 'Begin'  }\r\n                            </Button>\r\n                        }\r\n                        {\r\n                            this.state.isComplete && \r\n                            <React.Fragment>\r\n                                <Button variant=\"secondary\" onClick={this.resetTest}>\r\n                                    Retry demo\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={this.getResults}>\r\n                                    Get results\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div id=\"demoContainer\" ref={ container => this.container = container } style={containerStyle}>\r\n                    <svg></svg>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Demo\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n                <div className=\"container py-0 my-0\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Fitts' Law Demo</Link>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link text-dark\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport About from './components/About';\nimport Demo from './components/Demo';\nimport Navbar from './components/Navbar';\n\n\nexport default function App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Demo/>\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}