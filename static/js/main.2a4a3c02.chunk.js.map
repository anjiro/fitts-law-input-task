{"version":3,"sources":["components/About.js","components/Login.js","components/Demo.js","components/Navbar.js","App.js","index.js"],"names":["About","className","target","rel","href","alt","src","Component","Login","props","onChange","e","console","log","state","setState","name","value","username","device","fittsParams","Form","onSubmit","this","Row","Group","as","Col","md","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","Demo","resetTest","sequences","TestSequences","maxCircleDiam","Math","max","map","x","circlePathDiamater","radius","minSize","min","container","clientWidth","clientHeight","scale","isPractice","isActive","isComplete","generated","results","currentSequenceIndex","currentRepetition","currentCircleIndex","previousCircleIndex","generateCircleData","getResults","generateCsvFromResultLogs","csv","Object","keys","join","l","values","csvData","Blob","FileSaver","saveAs","Date","now","toString","resumeTest","restartTimer","pauseTest","completeTest","startTime","performance","timeElapsed","stopTimer","generateNewSequences","split","filter","trim","w","Number","nums","length","fp","count","numCircles","repetitions","numClicks","direction","onLoginDetailsChange","loginData","skipPractice","escPressed","keyCode","calculateDistance","x1","x2","y1","y2","deltaX","deltaY","sqrt","onClick","d","i","hit","si","c","y","s","appendResultLog","round","renderCircles","sequence","rep","distanceFromPrevious","time","hitX","hitY","existingLog","modifiedResults","timestamp","misses","prevState","condition","circlePathDiameter","inSequence","rev","PI","center","circles","Array","fill","_","rotationOffset","cos","sin","color","activeColor","d3","remove","attr","on","stopPropagation","selectAll","data","enter","append","lastCircleClick","document","addEventListener","removeEventListener","statusBarStyle","width","height","position","zIndex","right","left","top","padding","fontWeight","margin","maxWidth","maxHeight","overflow","backgroundColor","fontSize","Fragment","Modal","centered","keyboard","show","onHide","backdrop","Header","Title","Body","a","Footer","Button","variant","disabled","id","ref","style","bottom","Navbar","to","App","basename","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a4a3c02.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class About extends Component {\n    render() {\n        return (\n            <div className=\"container py-5\">\n                <h1>Fitt's Law Demo</h1>\n                <hr/>\n                <p className=\"text-justify\">\n                    This application was created to test Fitt's law, by collecting data of user input in two dimensions. \n                    It does so by prompting the user to click or tap several sequences of circles as highlighted and logging the accuracy and time taken to select each circle. \n                    This data is then made available to the user at the end of the test via a CSV file.\n                    For more information, feel free to contact me via my social accounts.\n                </p>\n                <hr/>\n                <p>Built with React, D3, and FileShare by Vishnu Gunapathi.</p>\n                <hr/>\n                <div className=\"icon-container\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/twinji\">\n                        <img alt=\"GitHub\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/github.svg\"/>\n                    </a>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/_twinji/\">\n                        <img alt=\"Instagram\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/instagram.svg\"/>\n                    </a>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/twinji/\">\n                        <img alt=\"LinkedIn\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/linkedin.svg\"/>\n                    </a>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/_twinji\">\n                        <img alt=\"Twitter\" src=\"https://raw.githubusercontent.com/twinji/twinji/master/icons/twitter.svg\"/>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport PropTypes from 'prop-types';\nimport Col from 'react-bootstrap/Col';\n\nexport class Login extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            username: '',\n            device: '',\n\t\t\t\t\t\tfittsParams: props.fittsParams\n        }\n    }\n\n    onChange = (e) => {\n\t\t\t\tconsole.log(\"State:\", this.state);\n        this.setState({ \n            [e.target.name]: e.target.value \n        }, () => {\n            this.props.onChange({\n                username: this.state.username,\n                device: this.state.device,\n\t\t\t\t\t\t\t\tfittsParams: this.state.fittsParams\n            })\n        });\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} md=\"6\" controlId=\"loginForm.ControlInputUsername\">\n                        <Form.Label>Condition</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Condition\"\n                            name=\"username\"\n                            defaultValue=\"\"\n                            onChange={this.onChange}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a condition\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\t\t\t\t\t\t\t\t\t\t{/*\n                    <Form.Group as={Col} md=\"6\" controlId=\"loginForm.ControlInputDevice\">\n                        <Form.Label>Device</Form.Label>\n                        <Form.Control \n                            as=\"select\"\n                            defaultValue=\"\" \n                            required \n                            onChange={this.onChange}\n                            name=\"device\"\n                        >\n                            <option value=\"\" selected disabled hidden>Select a device</option>\n                            <option value=\"mouse\">Mouse</option>\n                            <option value=\"trackpad\">Trackpad</option>\n                            <option value=\"touchscreen\">Touchscreen</option>\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please select your input device\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\t\t\t\t\t\t\t\t\t\t*/}\n                </Form.Row>\n\t\t\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"12\" controlId=\"loginForm.ControlFittsParams\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Fitts Parameters</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state.fittsParams}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"fittsParams\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Form.Row>\n            </Form>\n        )\n    }\n}\n\nLogin.propTypes = {\n    onChange: PropTypes.func.isRequired\n}\n\nexport default Login\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Login from './Login';\nimport FileSaver from 'file-saver';\nimport TestSequences from '../data/test_sequences.json';\nimport PracticeSequences from '../data/practice_sequences.json';\n\nexport class Demo extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            isActive: false,\n            isComplete : false,\n            isPractice: false,\n            username: '',\n            device: '',\n            sequences: null,\n            generated: [],\n            results: [],\n            currentSequenceIndex: 0,\n            currentRepetition: 1,\n            currentCircleIndex: 0,\n            previousCircleIndex: null,\n\t\t\t\t\t\tfittsParams: TestSequences.map(x => [x.circlePathDiamater, x.radius*2]),\n\t\t\t\t\t\tnumCircles: 9,\n\t\t\t\t\t\tnumClicks: 10,\n\t\t\t\t\t\tdirection: 1,\n\t\t\t\t\t\tlastCircleClick: {x: null, y: null}\n        }\n    }\n\n    resetTest = () => {\n\n        //let isPractice = this.state.isPractice == null ? true : !this.state.isPractice;\n        let isPractice = false;\n\t\t\t\tlet sequences = isPractice ? PracticeSequences : TestSequences;\n\t\t\t\tlet maxCircleDiam = Math.max(...sequences.map(x => x.circlePathDiamater + x.radius*2))\n\t\t\t\tlet minSize = Math.min(this.container.clientWidth, this.container.clientHeight)\n\t\t\t\tlet scale =  minSize > maxCircleDiam ? 1 : minSize / maxCircleDiam\n\n        this.setState({\n            isPractice,\n            sequences,\n\t\t\t\t\t\tscale,\n            username: '',\n            device: '',\n            isActive: false,\n            isComplete: false,\n            generated: [],\n            results: [],\n            currentSequenceIndex: 0,\n            currentRepetition: 1,\n            currentCircleIndex: 0,\n            previousCircleIndex: null,\n        }, () => {\n            this.generateCircleData();\n        });\n    }\n\n    getResults = () => {\n        this.generateCsvFromResultLogs();\n    }\n    \n    generateCsvFromResultLogs = () => {\n        const csv = Object.keys(this.state.results[0]).join(',') + '\\n'\n            + this.state.results.map(l => Object.values(l).join(',')).join('\\n');\n\n        const csvData = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n        FileSaver.saveAs(csvData, this.state.username + '_' + this.state.device + '_fitts_law_results_' + Date.now().toString() + '.csv');\n    }\n    \n    resumeTest = () => {\n        this.setState({\n            isActive: true,\n            previousCircleIndex: null\n        });\n        this.restartTimer();\n    }\n\n    pauseTest = () => {\n        this.setState({\n            isActive: false\n        });\n    }\n\n    completeTest = () => {\n        this.setState({\n            isActive: false,\n            isComplete: true\n        }, () => {\n            if (!this.state.isPractice)\n                this.getResults();\n        });\n    }\n\n    restartTimer = () => {\n        this.startTime = performance.now();\n        this.timeElapsed = null;\n    }\n\n    stopTimer = () => {\n        this.timeElapsed = performance.now() - this.startTime;\n    }\n\n\t\tgenerateNewSequences = (fittsParams) => {\n\t\t\treturn fittsParams\n\t\t\t\t.split('\\n')\n\t\t\t\t.filter(l => l.trim())\n\t\t\t\t.map(l => l\n\t\t\t\t\t.split(',')\n\t\t\t\t\t.filter(w => w.trim())\n\t\t\t\t\t.map(Number))\n\t\t\t\t.filter(nums => nums.length > 1)\n\t\t\t\t.map(fp => ({\n\t\t\t\t\t\tcirclePathDiamater: fp[0],\n\t\t\t\t\t\tradius: fp[1],\n\t\t\t\t\t\tcount: this.state.numCircles,\n\t\t\t\t\t\trepetitions: this.state.numClicks,\n\t\t\t\t\t\tdirection: this.state.direction\n\t\t\t\t\t}))\n\t\t}\n\n    onLoginDetailsChange = (loginData) => {\n        this.setState({\n            username: loginData.username,\n            device: loginData.device,\n\t\t\t\t\t\tsequences: this.generateNewSequences(loginData.fittsParams)\n\t\t\t\t}, () => { this.generateCircleData(); });\n    }\n\n    skipPractice = () => {\n        if (this.state.isPractice) {\n            this.setState({\n                isActive: false,\n                isPractice: false,\n                sequences: TestSequences\n            }, () => {\n                this.generateCircleData();\n            });\n        }\n    }\n\n    escPressed = (e) => {\n        if (e.keyCode === 27) {\n            this.skipPractice();\n        }\n    }\n\n    calculateDistance = (x1, x2, y1, y2) => {\n        let deltaX = x2 - x1;\n        let deltaY = y2 - y1;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    }\n\n    onClick = (d, i) => {\n\n        if (!this.state.isActive)\n            return;\n\n\t\t\t\tconsole.log(\"Circle click\", d, i);\n\n        let hit = i === this.state.currentCircleIndex;\n        if (hit) this.stopTimer();\n\n        let si = this.state.currentSequenceIndex;\n\t\t\t\tlet c = d == null ? {x: null, y: null} : {x: d.x, y: d.y};\n\n        const s = this.state.sequences[si];\n\n        this.appendResultLog(\n            this.state.username,\n            this.state.device,\n            this.state.currentSequenceIndex + 1,\n            this.state.currentRepetition,\n            s.circlePathDiamater,\n            //distanceFromPrevious,\n\t\t\t\t\t\tnull,\n            s.radius,\n            s.direction,\n            hit,\n            this.timeElapsed,\n\t\t\t\t\t\tc.x, c.y\n        );\n\n        if (hit) {\n            let currentSequenceIndex = this.state.currentSequenceIndex;\n            let s = this.state.sequences[currentSequenceIndex];\n            let previousCircleIndex = this.state.currentCircleIndex;\n            let currentCircleIndex = (this.state.currentCircleIndex + Math.round(s.count / 2)) % s.count;\n            let currentRepetition = this.state.currentRepetition + 1;\n            let isComplete = false;\n\n            if (currentRepetition > s.repetitions) {\n                currentRepetition = 1;\n                currentCircleIndex = 0;\n                currentSequenceIndex++;\n\n                if (currentSequenceIndex >= this.state.sequences.length) {\n                    this.completeTest();\n                    isComplete = true;\n                } else {\n                    this.pauseTest();\n                }\n            }\n\n            this.setState({\n                currentCircleIndex,\n                currentRepetition,\n                currentSequenceIndex,\n                previousCircleIndex\n            }, () => {\n                if (!isComplete) {\n                    this.renderCircles();\n                    this.restartTimer();\n                }\n            });\n        }\n    }\n\n\t\tappendResultLog = (username, device, sequence, rep, circlePathDiamater,\n\t\t\tdistanceFromPrevious, radius, direction, hit, time, hitX, hitY) => {\n\n        let existingLog = false;\n        var modifiedResults = this.state.results.map(l => {\n            if (l.username === username && l.device === device && l.sequence === sequence && l.rep === rep) {\n                existingLog = true;\n                l.timestamp = Date.now();\n                if (!hit) {\n                    l.misses++;\n                } else {\n                    l.hit = hit;\n                    l.time = this.timeElapsed;\n                }\n            }\n            return l;\n        });\n\n        if (existingLog) {\n            this.setState({\n                results: modifiedResults\n            });\n        } else {\n\n            this.setState(prevState => ({\n                results: [...prevState.results, {\n\t\t\t\t\t\t\t\t\t\tcondition: username, \n                    sequence, \n                    rep, \n\t\t\t\t\t\t\t\t\t\tcirclePathDiameter: circlePathDiamater,\n                    radius,\n                    hit, \n\t\t\t\t\t\t\t\t\t\thitX, hitY,\n                    time, \n                    timestamp: Date.now()\n                }]\n            }));\n        }\n    }\n\n    inSequence = () => {\n        return this.state.currentSequenceIndex > 0 && !this.state.isComplete;\n    }\n    \n    generateCircleData = () => {\n\t\t\t\tconsole.log(\"Sequences:\", this.state.sequences);\n\t\t\t\tif(this.state.sequences.length > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tgenerated: this.state.sequences.map((s) => {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlet rev = Math.PI * 2;\n\t\t\t\t\t\t\t\t\tlet center = {\n\t\t\t\t\t\t\t\t\t\t\tx: this.container.clientWidth / 2,\n\t\t\t\t\t\t\t\t\t\t\ty: this.container.clientHeight / 2\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tcircles: Array(s.count).fill().map((_, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet rotationOffset = Math.PI * 1.5;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: center.x + Math.cos(rotationOffset + i * (rev / s.count)) * this.state.scale * s.circlePathDiamater / 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: center.y + Math.sin(rotationOffset + i * (rev / s.count)) * this.state.scale * s.circlePathDiamater / 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tradius: s.radius * this.state.scale,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'lightgray',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveColor: 'crimson'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}, this.renderCircles)};\n    }\n\n    renderCircles = () => {\n\n        d3.selectAll(\"svg > *\").remove();\n        \n        let svgContainer = d3\n            .select(\"#demoContainer > svg\")\n            .attr(\"width\", this.container.clientWidth)\n            .attr(\"height\", this.container.clientHeight)\n            .on(\"click\", e => {\n                d3.event.stopPropagation();\n                this.onClick(null, -1);\n            });\n\n        let circles = svgContainer\n            .selectAll(\"circle\")\n            .data(this.state.generated[this.state.currentSequenceIndex].circles)\n            .enter()\n            .append(\"circle\");\n\n        circles\n            .attr(\"cx\", d => d.x)\n            .attr(\"cy\", d => d.y)\n            .attr(\"r\", d => d.radius)\n            .attr(\"fill\", (d, i) => i === this.state.currentCircleIndex ? d.activeColor : d.color)\n            .on(\"click\", (d, i) => {\n                d3.event.stopPropagation();\n                this.onClick(d, i);\n            });\n    }\n    \n    componentDidMount() {\n        document.addEventListener('keydown', this.escPressed, false);\n        this.resetTest();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.escPressed, false);\n    }\n\n    render() {\n\n        const containerStyle = {\n            width: 'auto',\n            height: 'auto',\n            position: 'fixed',\n            zIndex: -99,\n            right: 0, left: 0, top: 0, bottom: 0,\n            margin: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            overflow: 'visible',\n        }\n\n        const statusBarStyle = {\n            width: 'auto',\n            height: 'auto',\n            position: 'absolute',\n            zIndex: -100,\n            right: 0, left: 0, top: 55,\n            padding: 6,\n            fontWeight: 'bold',\n            margin: 'auto',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            overflow: 'visible',\n            backgroundColor: this.state.isPractice ? 'orange' : 'lightblue',\n            color: 'white',\n            fontSize: '20px',\n        }\n\n        return (\n            <React.Fragment>\n                <Modal centered keyboard={false} show={!this.state.isActive} onHide={this.resumeTest} backdrop=\"static\">\n                    <Modal.Header>\n                        {\n                            (this.inSequence() || this.state.isComplete) &&\n                            <Modal.Title>\n                                {this.state.isPractice ? 'Practice sequence' : 'Sequence'} {this.state.currentSequenceIndex} out of {this.state.sequences.length} complete\n                            </Modal.Title>\n                        }\n                        {              \n                            !this.inSequence() && !this.state.isComplete &&\n                            <Modal.Title>\n                                Fitt's law demo\n                            </Modal.Title>\n                        }\n                    </Modal.Header>\n                    <Modal.Body>\n                        {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.inSequence() && !this.state.isComplete &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLoginDetailsChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfittsParams={this.state.fittsParams ? this.state.fittsParams.map(a => a.join(\",\")).join(\"\\n\") : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n                        }\n                        { \n                            this.inSequence() ? \n                                'Take a break and proceed to the next sequence when you are ready.' : \n                                    (this.state.isComplete ? (this.state.isPractice ? 'You have completed the practice run, click below to continue.' : 'You have completed this demo, click below to view results.') : \n                                        'Select the red circles as they appear as quickly as possible to the best of your ability.') \n                        }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {\n                            !this.state.isComplete &&\n                            <React.Fragment>\n                                <Button variant=\"primary\" onClick={this.resumeTest} disabled={!this.state.username }>\n                                    { this.inSequence() ? 'Proceed' : (this.state.isPractice ? 'Begin practice' : 'Begin test')  }\n                                </Button>\n                            </React.Fragment>\n                        }\n                        {\n                            (this.state.isComplete && this.state.isPractice) && \n                            <React.Fragment>\n                                <Button variant=\"secondary\" onClick={this.resetTest}>\n                                    Continue\n                                </Button>\n                            </React.Fragment>\n                        }\n                        {\n                            (this.state.isComplete && !this.state.isPractice) && \n                            <React.Fragment>\n                                <Button variant=\"secondary\" onClick={this.resetTest}>\n                                    Retry demo\n                                </Button>\n                                <Button variant=\"primary\" onClick={this.getResults}>\n                                    Get results\n                                </Button>\n                            </React.Fragment>\n                        }\n                    </Modal.Footer>\n                </Modal>\n                <div id=\"demoContainer\" ref={ container => this.container = container } style={containerStyle}>\n                    {\n                        this.state.sequences !== null &&\n                        <span style={statusBarStyle}>\n                            {this.state.isPractice ? 'Practice sequence' : 'Sequence'}\n                            &nbsp;\n                            {Math.min(this.state.currentSequenceIndex + 1, this.state.sequences.length)}/{this.state.sequences.length}\n                            </span>\n                    }\n                    <svg></svg>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Demo\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\n                <div className=\"container py-0 my-0\">\n                    <Link className=\"navbar-brand\" to=\"/\">Fitts' Law Demo</Link>\n                    <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-dark\" to=\"/about\">About</Link>\n                    </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport About from './components/About';\nimport Demo from './components/Demo';\nimport Navbar from './components/Navbar';\n\n\nexport default function App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Demo/>\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}